import time
import json
import csv
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC
from selenium.common.exceptions import TimeoutException, NoSuchElementException

def login_to_amazon(driver, username, password):
    driver.get("https://www.amazon.in/")
    try:
        # Click on Sign In
        sign_in_button = driver.find_element(By.ID, "nav-link-accountList")
        sign_in_button.click()

        # Enter email/phone number
        email_field = WebDriverWait(driver, 10).until(
            EC.presence_of_element_located((By.ID, "ap_email"))
        )
        email_field.send_keys(username)
        email_field.send_keys(Keys.RETURN)

        # Enter password
        password_field = WebDriverWait(driver, 10).until(
            EC.presence_of_element_located((By.ID, "ap_password"))
        )
        password_field.send_keys(password)
        password_field.send_keys(Keys.RETURN)

    except Exception as e:
        print(f"Error during login: {e}")
        driver.quit()


def scrape_category(driver, category_url):
    driver.get(category_url)
    product_data = []
    
    for page in range(1, 4):  # Adjust the range as per category pagination limits
        try:
            WebDriverWait(driver, 10).until(
                EC.presence_of_all_elements_located((By.CLASS_NAME, "zg-item-immersion"))
            )

            products = driver.find_elements(By.CLASS_NAME, "zg-item-immersion")
            for product in products:
                try:
                    product_name = product.find_element(By.CLASS_NAME, "p13n-sc-truncate").text
                    product_price = product.find_element(By.CLASS_NAME, "p13n-sc-price").text
                    product_discount = product.find_element(By.CLASS_NAME, "a-icon-alt").text  # Modify as needed
                    best_seller_rating = product.find_element(By.CLASS_NAME, "a-icon-row").text  # Modify as needed

                    product_data.append({
                        "Product Name": product_name,
                        "Product Price": product_price,
                        "Sale Discount": product_discount,
                        "Best Seller Rating": best_seller_rating,
                        "Category Name": category_url.split('/')[-1]
                    })

                except NoSuchElementException:
                    continue

            next_button = driver.find_element(By.CLASS_NAME, "a-last")
            if "a-disabled" in next_button.get_attribute("class"):
                break
            next_button.click()
            time.sleep(2)
        except TimeoutException:
            print("Timeout while loading category page.")
            break

    return product_data

def save_data_to_csv(data, filename):
    keys = data[0].keys()
    with open(filename, 'w', newline='', encoding='utf-8') as csvfile:
        writer = csv.DictWriter(csvfile, fieldnames=keys)
        writer.writeheader()
        writer.writerows(data)

def main():
    amazon_username = "your_email@example.com"
    amazon_password = "your_password"

    categories = [
        "https://www.amazon.in/gp/bestsellers/kitchen/ref=zg_bs_nav_kitchen_0",
        "https://www.amazon.in/gp/bestsellers/shoes/ref=zg_bs_nav_shoes_0",
        "https://www.amazon.in/gp/bestsellers/computers/ref=zg_bs_nav_computers_0",
        "https://www.amazon.in/gp/bestsellers/electronics/ref=zg_bs_nav_electronics_0"
    ]

    driver = webdriver.Chrome()

    try:
        login_to_amazon(driver, amazon_username, amazon_password)
        all_product_data = []

        for category_url in categories:
            category_data = scrape_category(driver, category_url)
            all_product_data.extend(category_data)

        save_data_to_csv(all_product_data, "amazon_best_sellers.csv")

    except Exception as e:
        print(f"Error during scraping: {e}")
    finally:
        driver.quit()

if __name__ == "__main__":
    main()
